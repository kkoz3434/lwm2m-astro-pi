#!/usr/bin/env python3
# -*- encoding: utf-8 -*-

from fsdm import ResourceHandler, CoapError, DataType, KvStore
from sense_hat import SenseHat
from cvlib import detect_common_objects
from cv2 import imshow, waitKey, destroyAllWindows, VideoCapture
from cvlib.object_detection import draw_bbox


class ResourceHandler_3300_5700(ResourceHandler):
    NAME = "Sensor Value"
    DESCRIPTION = '''\
Last or Current Measured Value from the Sensor.'''
    DATATYPE = DataType.FLOAT
    EXTERNAL_NOTIFY = False
    
    def __init__(self):
        self.sense = SenseHat()
        self.sun_position = 0
        
    def wrap_degrees(self, d):
        return min(d, 360 - d)

    def read(self,
             instance_id,            # int
             resource_instance_id):  # int for multiple resources, None otherwise
        # print value to stdout
        if instance_id == 0: # charging batteries
            self.sense.set_imu_config(True, True, True)
            orient_degrees = self.sense.get_orientation()
            diff = abs(self.wrap_degrees(orient_degrees["roll"]) - self.wrap_degrees(self.sun_position))
            charging_power = (180 - diff) / 180
            print(float(charging_power * 100))
            return
            
        elif instance_id == 1: # planets
            temp = self.sense.get_temperature()
            if temp < 25:
                print(0.0)
                return
            elif temp < 35:
                print(1.0)
                return
            elif temp < 45:
                print(2.0)
                return
            print(3.0)
            return
        
        elif instance_id == 2: # astronauts number detection
            cap = VideoCapture(0)
            ret, img = cap.read()
            cap.release()
            bbox, label, conf = detect_common_objects(img)
            output_img = draw_bbox(img, bbox, label, conf)

            count = 0
            for l in label:
                if l == 'person':
                    count += 1
            print(float(count))
            return
            
        print(-1.0)
        return


if __name__ == '__main__':
    ResourceHandler_3300_5700().main()


